/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.view;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;
import sistema.bean.Funcionario;
import sistema.dao.FuncionarioDAO;

/**
 *
 * @author ambiental.pelotas
 */
public class FormFunc extends javax.swing.JInternalFrame {

    private JFrame mdi;
    private FormAddFunc formAddFunc;
    JFileChooser chooser;

    /**
     * Creates new form FormFunc
     */
    public FormFunc(JFrame mdi) {
        this.mdi = mdi;
        initComponents();
        this.atualizaLista();
    }

    private void atualizaLista() {
        try {
            FuncionarioDAO funcDAO = new FuncionarioDAO(TelaPrincipal.getConexao());
            List<Funcionario> lista = funcDAO.listaTodos();
            DefaultTableModel dtm = (DefaultTableModel) this.tbFuncionarios.getModel();
            dtm.setRowCount(0);
            for (Funcionario user : lista) {
                dtm.addRow(new Object[]{user.getCod(), user.getNome(), user.getRg(), user.getCpf(), user.getPis()});
            }
        } catch (SQLException ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btImportar = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        btCadastrar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFuncionarios = new javax.swing.JTable();

        setClosable(true);
        setTitle("Gerenciamento de Funcionários");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        btImportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/import.png"))); // NOI18N
        btImportar.setText("Importar Lista");
        btImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImportarActionPerformed(evt);
            }
        });

        btRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        btRemover.setText("Remover");

        btCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/include.png"))); // NOI18N
        btCadastrar.setText("Incluir");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/edit.png"))); // NOI18N
        btEditar.setText("Editar");

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/search.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");

        btAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/atualizar.png"))); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btImportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btAtualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btImportar)
                        .addComponent(btCadastrar)
                        .addComponent(btRemover)
                        .addComponent(btEditar)
                        .addComponent(btPesquisar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "RG", "CPF", "PIS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbFuncionarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        this.atualizaLista();
    }//GEN-LAST:event_formInternalFrameClosed

    private void btImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImportarActionPerformed

        Reader in = null;
        try {
            in = new FileReader("C:/temp/teste2.txt");
            Iterable<CSVRecord> records = CSVFormat.RFC4180.withHeader().parse(in);
            String nome = "";
            String sexo = "";
            String dataNascimento = "";
            String endereco = "";
            String complemento = "";
            String bairro = "";
            String cidade = "";
            String cpf = "";
            String rg = "";
            String dataadmissao = "";
            String funcao = "";
            String pis = "";
            for (CSVRecord record : records) {
                try {
                    nome = record.get("Nome");
                    sexo = record.get("Sexo");
                    dataNascimento = record.get("DataNascimento");
                    endereco = record.get("Endereco");
                    complemento = record.get("Complemento");
                    bairro = record.get("Bairro");
                    cidade = record.get("Cidade");
                    cpf = record.get("Cpf");
                    rg = record.get("Rg");
                    dataadmissao = record.get("DataAdmissao");
                    funcao = record.get("Funcao");
                    pis = record.get("Pis");
                    
                    Funcionario f1 = new Funcionario();
                    
                    f1.setNome(nome);
                    f1.setSexo(sexo);
                    f1.setDtNascimento(dataNascimento);
                    f1.setEndereco(endereco);
                    f1.setComplemento(complemento);
                    f1.setBairro(bairro);
                    f1.setCidade(cidade);
                    f1.setCpf(cpf);
                    f1.setRg(rg);
                    f1.setDtAdmissao(dataadmissao);
                    f1.setFuncao(funcao);
                    f1.setPis(pis);
                    
                    FuncionarioDAO funcI = new FuncionarioDAO(TelaPrincipal.getConexao());
                    
                    System.out.println("Nome:" + f1.getNome() + " Sexo:" + f1.getSexo() + " Data de Nascimento:" + f1.getDtNascimento() + " Endereço:" + f1.getEndereco() + " Complemento:" + f1.getComplemento() + " Bairro:" + f1.getBairro() + " Cidade:" + f1.getCidade() + " CPF:" + f1.getCpf() + " RG:" + f1.getRg() + " Data de Admissão:" + f1.getDtAdmissao() + " Função:" + f1.getFuncao() + " PIS:" + f1.getPis());
                    
                    funcI.inserir(f1);
                    
                } catch (SQLException ex) {
                    Logger.getLogger(FormFunc.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FormFunc.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormFunc.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(FormFunc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btImportarActionPerformed

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btCadastrarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // TODO add your handling code here:
        this.atualizaLista();
    }//GEN-LAST:event_btAtualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btImportar;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btRemover;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbFuncionarios;
    // End of variables declaration//GEN-END:variables
}
